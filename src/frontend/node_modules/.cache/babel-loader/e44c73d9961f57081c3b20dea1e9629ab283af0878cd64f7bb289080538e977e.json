{"ast":null,"code":"// layoutCalculator.ts\n// SOLID: Single Responsibility - Calculate optimal layout for stamps\nexport class OptimizedLayoutCalculator{/**\n   * Calculate optimal rows and columns using the same logic as live preview\n   */calculateOptimalLayout(stampCount){// Tiered layout plan\nif(stampCount<=1)return{rows:1,cols:Math.max(1,stampCount)};if(stampCount<=5)return{rows:1,cols:stampCount};if(stampCount<=10)return{rows:2,cols:5};if(stampCount<=12)return{rows:2,cols:6};if(stampCount<=15)return{rows:2,cols:8};// widen to reduce whitespace\nif(stampCount<=18)return{rows:2,cols:9};// widen to reduce whitespace\nif(stampCount<=20)return{rows:3,cols:7};if(stampCount<=24)return{rows:3,cols:8};if(stampCount<=27)return{rows:3,cols:9};return{rows:3,cols:10};}}","map":{"version":3,"names":["OptimizedLayoutCalculator","calculateOptimalLayout","stampCount","rows","cols","Math","max"],"sources":["/Users/shawnlee/Documents/GitHub/passes-mktr/src/frontend/src/services/layoutCalculator.ts"],"sourcesContent":["// layoutCalculator.ts\n// SOLID: Single Responsibility - Calculate optimal layout for stamps\n\nimport { Layout, LayoutCalculator } from '../types/stripInterfaces';\nimport { STRIP_W_1X, STRIP_H_1X } from '../shared/stripConstants';\n\nexport class OptimizedLayoutCalculator implements LayoutCalculator {\n  /**\n   * Calculate optimal rows and columns using the same logic as live preview\n   */\n  calculateOptimalLayout(stampCount: number): Layout {\n    // Tiered layout plan\n    if (stampCount <= 1) return { rows: 1, cols: Math.max(1, stampCount) };\n    if (stampCount <= 5) return { rows: 1, cols: stampCount };\n    if (stampCount <= 10) return { rows: 2, cols: 5 };\n    if (stampCount <= 12) return { rows: 2, cols: 6 };\n    if (stampCount <= 15) return { rows: 2, cols: 8 }; // widen to reduce whitespace\n    if (stampCount <= 18) return { rows: 2, cols: 9 }; // widen to reduce whitespace\n    if (stampCount <= 20) return { rows: 3, cols: 7 };\n    if (stampCount <= 24) return { rows: 3, cols: 8 };\n    if (stampCount <= 27) return { rows: 3, cols: 9 };\n    return { rows: 3, cols: 10 };\n  }\n}\n"],"mappings":"AAAA;AACA;AAKA,MAAO,MAAM,CAAAA,yBAAsD,CACjE;AACF;AACA,KACEC,sBAAsBA,CAACC,UAAkB,CAAU,CACjD;AACA,GAAIA,UAAU,EAAI,CAAC,CAAE,MAAO,CAAEC,IAAI,CAAE,CAAC,CAAEC,IAAI,CAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAEJ,UAAU,CAAE,CAAC,CACtE,GAAIA,UAAU,EAAI,CAAC,CAAE,MAAO,CAAEC,IAAI,CAAE,CAAC,CAAEC,IAAI,CAAEF,UAAW,CAAC,CACzD,GAAIA,UAAU,EAAI,EAAE,CAAE,MAAO,CAAEC,IAAI,CAAE,CAAC,CAAEC,IAAI,CAAE,CAAE,CAAC,CACjD,GAAIF,UAAU,EAAI,EAAE,CAAE,MAAO,CAAEC,IAAI,CAAE,CAAC,CAAEC,IAAI,CAAE,CAAE,CAAC,CACjD,GAAIF,UAAU,EAAI,EAAE,CAAE,MAAO,CAAEC,IAAI,CAAE,CAAC,CAAEC,IAAI,CAAE,CAAE,CAAC,CAAE;AACnD,GAAIF,UAAU,EAAI,EAAE,CAAE,MAAO,CAAEC,IAAI,CAAE,CAAC,CAAEC,IAAI,CAAE,CAAE,CAAC,CAAE;AACnD,GAAIF,UAAU,EAAI,EAAE,CAAE,MAAO,CAAEC,IAAI,CAAE,CAAC,CAAEC,IAAI,CAAE,CAAE,CAAC,CACjD,GAAIF,UAAU,EAAI,EAAE,CAAE,MAAO,CAAEC,IAAI,CAAE,CAAC,CAAEC,IAAI,CAAE,CAAE,CAAC,CACjD,GAAIF,UAAU,EAAI,EAAE,CAAE,MAAO,CAAEC,IAAI,CAAE,CAAC,CAAEC,IAAI,CAAE,CAAE,CAAC,CACjD,MAAO,CAAED,IAAI,CAAE,CAAC,CAAEC,IAAI,CAAE,EAAG,CAAC,CAC9B,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}