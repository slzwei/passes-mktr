{"ast":null,"code":"import _objectSpread from\"/Users/shawnlee/Documents/GitHub/passes-mktr/src/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";var _NotificationService;export class NotificationService{constructor(){this.notifications=[];this.listeners=new Set();}static getInstance(){if(!NotificationService.instance){NotificationService.instance=new NotificationService();}return NotificationService.instance;}// Subscribe to notification changes\nsubscribe(listener){this.listeners.add(listener);return()=>this.listeners.delete(listener);}// Notify all listeners\nnotify(){this.listeners.forEach(listener=>listener([...this.notifications]));}// Add a notification\nadd(notification){const id=Date.now().toString(36)+Math.random().toString(36).substr(2);const newNotification=_objectSpread(_objectSpread({},notification),{},{id,onClose:id=>this.remove(id)});this.notifications.push(newNotification);this.notify();return id;}// Remove a notification\nremove(id){this.notifications=this.notifications.filter(n=>n.id!==id);this.notify();}// Clear all notifications\nclear(){this.notifications=[];this.notify();}// Get all notifications\ngetNotifications(){return[...this.notifications];}// Success notification\nsuccess(title,message,duration){return this.add({type:'success',title,message,duration});}// Error notification\nerror(title,message,duration){return this.add({type:'error',title,message,duration});}// Warning notification\nwarning(title,message,duration){return this.add({type:'warning',title,message,duration});}// Info notification\ninfo(title,message,duration){return this.add({type:'info',title,message,duration});}// Template saved notification\ntemplateSaved(templateName){return this.success('Template Saved',\"\\\"\".concat(templateName,\"\\\" has been saved successfully.\"),3000);}// Template loaded notification\ntemplateLoaded(templateName){return this.success('Template Loaded',\"\\\"\".concat(templateName,\"\\\" has been loaded successfully.\"),3000);}// Template deleted notification\ntemplateDeleted(templateName){return this.info('Template Deleted',\"\\\"\".concat(templateName,\"\\\" has been deleted.\"),3000);}// Pass exported notification\npassExported(){return this.success('Pass Exported','Your Apple Wallet pass has been exported successfully.',3000);}// Validation error notification\nvalidationError(errors){return this.error('Validation Error',\"Please fix the following issues: \".concat(errors.join(', ')),5000);}// Connection error notification\nconnectionError(){return this.error('Connection Error','Unable to connect to the server. Please check your connection.',5000);}// Preview generated notification\npreviewGenerated(){return this.success('Preview Generated','Your pass preview has been updated.',2000);}// Field added notification\nfieldAdded(fieldType){return this.success('Field Added',\"New \".concat(fieldType,\" field has been added.\"),2000);}// Field deleted notification\nfieldDeleted(fieldType){return this.info('Field Deleted',\"\".concat(fieldType,\" field has been removed.\"),2000);}// Image uploaded notification\nimageUploaded(imageType){return this.success('Image Uploaded',\"\".concat(imageType,\" image has been uploaded successfully.\"),2000);}// Image upload error notification\nimageUploadError(error){return this.error('Upload Error',\"Failed to upload image: \".concat(error),4000);}// Color updated notification\ncolorUpdated(colorType){return this.success('Color Updated',\"\".concat(colorType,\" color has been updated.\"),2000);}// Undo notification\nundo(action){return this.info('Undo',\"\\\"\".concat(action,\"\\\" has been undone.\"),2000);}// Redo notification\nredo(action){return this.info('Redo',\"\\\"\".concat(action,\"\\\" has been redone.\"),2000);}// Copy notification\ncopied(item){return this.success('Copied',\"\".concat(item,\" has been copied to clipboard.\"),2000);}// Paste notification\npasted(item){return this.success('Pasted',\"\".concat(item,\" has been pasted.\"),2000);}// Template created notification\ntemplateCreated(templateName){return this.success('Template Created',\"\\\"\".concat(templateName,\"\\\" has been created successfully.\"),3000);}// Template duplicated notification\ntemplateDuplicated(templateName){return this.success('Template Duplicated',\"\\\"\".concat(templateName,\"\\\" has been duplicated.\"),3000);}// Template exported notification\ntemplateExported(templateName){return this.success('Template Exported',\"\\\"\".concat(templateName,\"\\\" has been exported successfully.\"),3000);}// Template imported notification\ntemplateImported(templateName){return this.success('Template Imported',\"\\\"\".concat(templateName,\"\\\" has been imported successfully.\"),3000);}// Templates deleted notification\ntemplatesDeleted(count){return this.info('Templates Deleted',\"\".concat(count,\" template\").concat(count>1?'s':'',\" deleted successfully.\"),3000);}}_NotificationService=NotificationService;NotificationService.instance=void 0;export default NotificationService.getInstance();","map":{"version":3,"names":["NotificationService","constructor","notifications","listeners","Set","getInstance","instance","subscribe","listener","add","delete","notify","forEach","notification","id","Date","now","toString","Math","random","substr","newNotification","_objectSpread","onClose","remove","push","filter","n","clear","getNotifications","success","title","message","duration","type","error","warning","info","templateSaved","templateName","concat","templateLoaded","templateDeleted","passExported","validationError","errors","join","connectionError","previewGenerated","fieldAdded","fieldType","fieldDeleted","imageUploaded","imageType","imageUploadError","colorUpdated","colorType","undo","action","redo","copied","item","pasted","templateCreated","templateDuplicated","templateExported","templateImported","templatesDeleted","count","_NotificationService"],"sources":["/Users/shawnlee/Documents/GitHub/passes-mktr/src/frontend/src/services/notificationService.ts"],"sourcesContent":["import { NotificationProps } from '../components/common/Notification';\n\nexport class NotificationService {\n  private static instance: NotificationService;\n  private notifications: NotificationProps[] = [];\n  private listeners: Set<(notifications: NotificationProps[]) => void> = new Set();\n\n  constructor() {}\n\n  static getInstance(): NotificationService {\n    if (!NotificationService.instance) {\n      NotificationService.instance = new NotificationService();\n    }\n    return NotificationService.instance;\n  }\n\n  // Subscribe to notification changes\n  subscribe(listener: (notifications: NotificationProps[]) => void): () => void {\n    this.listeners.add(listener);\n    return () => this.listeners.delete(listener);\n  }\n\n  // Notify all listeners\n  private notify(): void {\n    this.listeners.forEach(listener => listener([...this.notifications]));\n  }\n\n  // Add a notification\n  add(notification: Omit<NotificationProps, 'id' | 'onClose'>): string {\n    const id = Date.now().toString(36) + Math.random().toString(36).substr(2);\n    const newNotification: NotificationProps = {\n      ...notification,\n      id,\n      onClose: (id: string) => this.remove(id)\n    };\n\n    this.notifications.push(newNotification);\n    this.notify();\n    return id;\n  }\n\n  // Remove a notification\n  remove(id: string): void {\n    this.notifications = this.notifications.filter(n => n.id !== id);\n    this.notify();\n  }\n\n  // Clear all notifications\n  clear(): void {\n    this.notifications = [];\n    this.notify();\n  }\n\n  // Get all notifications\n  getNotifications(): NotificationProps[] {\n    return [...this.notifications];\n  }\n\n  // Success notification\n  success(title: string, message: string, duration?: number): string {\n    return this.add({\n      type: 'success',\n      title,\n      message,\n      duration\n    });\n  }\n\n  // Error notification\n  error(title: string, message: string, duration?: number): string {\n    return this.add({\n      type: 'error',\n      title,\n      message,\n      duration\n    });\n  }\n\n  // Warning notification\n  warning(title: string, message: string, duration?: number): string {\n    return this.add({\n      type: 'warning',\n      title,\n      message,\n      duration\n    });\n  }\n\n  // Info notification\n  info(title: string, message: string, duration?: number): string {\n    return this.add({\n      type: 'info',\n      title,\n      message,\n      duration\n    });\n  }\n\n  // Template saved notification\n  templateSaved(templateName: string): string {\n    return this.success(\n      'Template Saved',\n      `\"${templateName}\" has been saved successfully.`,\n      3000\n    );\n  }\n\n  // Template loaded notification\n  templateLoaded(templateName: string): string {\n    return this.success(\n      'Template Loaded',\n      `\"${templateName}\" has been loaded successfully.`,\n      3000\n    );\n  }\n\n  // Template deleted notification\n  templateDeleted(templateName: string): string {\n    return this.info(\n      'Template Deleted',\n      `\"${templateName}\" has been deleted.`,\n      3000\n    );\n  }\n\n  // Pass exported notification\n  passExported(): string {\n    return this.success(\n      'Pass Exported',\n      'Your Apple Wallet pass has been exported successfully.',\n      3000\n    );\n  }\n\n  // Validation error notification\n  validationError(errors: string[]): string {\n    return this.error(\n      'Validation Error',\n      `Please fix the following issues: ${errors.join(', ')}`,\n      5000\n    );\n  }\n\n  // Connection error notification\n  connectionError(): string {\n    return this.error(\n      'Connection Error',\n      'Unable to connect to the server. Please check your connection.',\n      5000\n    );\n  }\n\n  // Preview generated notification\n  previewGenerated(): string {\n    return this.success(\n      'Preview Generated',\n      'Your pass preview has been updated.',\n      2000\n    );\n  }\n\n  // Field added notification\n  fieldAdded(fieldType: string): string {\n    return this.success(\n      'Field Added',\n      `New ${fieldType} field has been added.`,\n      2000\n    );\n  }\n\n  // Field deleted notification\n  fieldDeleted(fieldType: string): string {\n    return this.info(\n      'Field Deleted',\n      `${fieldType} field has been removed.`,\n      2000\n    );\n  }\n\n  // Image uploaded notification\n  imageUploaded(imageType: string): string {\n    return this.success(\n      'Image Uploaded',\n      `${imageType} image has been uploaded successfully.`,\n      2000\n    );\n  }\n\n  // Image upload error notification\n  imageUploadError(error: string): string {\n    return this.error(\n      'Upload Error',\n      `Failed to upload image: ${error}`,\n      4000\n    );\n  }\n\n  // Color updated notification\n  colorUpdated(colorType: string): string {\n    return this.success(\n      'Color Updated',\n      `${colorType} color has been updated.`,\n      2000\n    );\n  }\n\n  // Undo notification\n  undo(action: string): string {\n    return this.info(\n      'Undo',\n      `\"${action}\" has been undone.`,\n      2000\n    );\n  }\n\n  // Redo notification\n  redo(action: string): string {\n    return this.info(\n      'Redo',\n      `\"${action}\" has been redone.`,\n      2000\n    );\n  }\n\n  // Copy notification\n  copied(item: string): string {\n    return this.success(\n      'Copied',\n      `${item} has been copied to clipboard.`,\n      2000\n    );\n  }\n\n  // Paste notification\n  pasted(item: string): string {\n    return this.success(\n      'Pasted',\n      `${item} has been pasted.`,\n      2000\n    );\n  }\n\n  // Template created notification\n  templateCreated(templateName: string): string {\n    return this.success(\n      'Template Created',\n      `\"${templateName}\" has been created successfully.`,\n      3000\n    );\n  }\n\n  // Template duplicated notification\n  templateDuplicated(templateName: string): string {\n    return this.success(\n      'Template Duplicated',\n      `\"${templateName}\" has been duplicated.`,\n      3000\n    );\n  }\n\n  // Template exported notification\n  templateExported(templateName: string): string {\n    return this.success(\n      'Template Exported',\n      `\"${templateName}\" has been exported successfully.`,\n      3000\n    );\n  }\n\n  // Template imported notification\n  templateImported(templateName: string): string {\n    return this.success(\n      'Template Imported',\n      `\"${templateName}\" has been imported successfully.`,\n      3000\n    );\n  }\n\n  // Templates deleted notification\n  templatesDeleted(count: number): string {\n    return this.info(\n      'Templates Deleted',\n      `${count} template${count > 1 ? 's' : ''} deleted successfully.`,\n      3000\n    );\n  }\n}\n\nexport default NotificationService.getInstance();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}