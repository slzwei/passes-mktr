{"ast":null,"code":"import{useEffect,useState,useRef}from'react';import{io}from'socket.io-client';export function useWebSocket(){const[socket,setSocket]=useState(null);const[isConnected,setIsConnected]=useState(false);const[error,setError]=useState(null);const reconnectTimeoutRef=useRef(null);const reconnectAttempts=useRef(0);const maxReconnectAttempts=5;useEffect(()=>{// Initialize socket connection\nconst newSocket=io(process.env.REACT_APP_WS_URL||'http://localhost:3000',{transports:['websocket'],timeout:20000,reconnection:true,reconnectionAttempts:maxReconnectAttempts,reconnectionDelay:1000,reconnectionDelayMax:5000});// Connection event handlers\nnewSocket.on('connect',()=>{console.log('WebSocket connected');setIsConnected(true);setError(null);reconnectAttempts.current=0;});newSocket.on('disconnect',reason=>{console.log('WebSocket disconnected:',reason);setIsConnected(false);if(reason==='io server disconnect'){// Server disconnected, try to reconnect\nsetError('Server disconnected. Attempting to reconnect...');}});newSocket.on('connect_error',err=>{console.error('WebSocket connection error:',err);setError(\"Connection error: \".concat(err.message));reconnectAttempts.current++;if(reconnectAttempts.current>=maxReconnectAttempts){setError('Failed to connect to server. Please refresh the page.');}});newSocket.on('reconnect',attemptNumber=>{console.log('WebSocket reconnected after',attemptNumber,'attempts');setIsConnected(true);setError(null);reconnectAttempts.current=0;});newSocket.on('reconnect_attempt',attemptNumber=>{console.log('WebSocket reconnection attempt:',attemptNumber);setError(\"Reconnecting... (\".concat(attemptNumber,\"/\").concat(maxReconnectAttempts,\")\"));});newSocket.on('reconnect_failed',()=>{console.error('WebSocket reconnection failed');setError('Failed to reconnect to server. Please refresh the page.');});setSocket(newSocket);// Cleanup on unmount\nreturn()=>{if(reconnectTimeoutRef.current){clearTimeout(reconnectTimeoutRef.current);}newSocket.close();};},[]);return{socket,isConnected,error};}","map":{"version":3,"names":["useEffect","useState","useRef","io","useWebSocket","socket","setSocket","isConnected","setIsConnected","error","setError","reconnectTimeoutRef","reconnectAttempts","maxReconnectAttempts","newSocket","process","env","REACT_APP_WS_URL","transports","timeout","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","on","console","log","current","reason","err","concat","message","attemptNumber","clearTimeout","close"],"sources":["/Users/shawnlee/Documents/GitHub/passes-mktr/src/frontend/src/hooks/useWebSocket.tsx"],"sourcesContent":["import { useEffect, useState, useRef } from 'react';\nimport { io, Socket } from 'socket.io-client';\n\ninterface UseWebSocketReturn {\n  socket: Socket | null;\n  isConnected: boolean;\n  error: string | null;\n}\n\nexport function useWebSocket(): UseWebSocketReturn {\n  const [socket, setSocket] = useState<Socket | null>(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const reconnectTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const reconnectAttempts = useRef(0);\n  const maxReconnectAttempts = 5;\n\n  useEffect(() => {\n    // Initialize socket connection\n    const newSocket = io(process.env.REACT_APP_WS_URL || 'http://localhost:3000', {\n      transports: ['websocket'],\n      timeout: 20000,\n      reconnection: true,\n      reconnectionAttempts: maxReconnectAttempts,\n      reconnectionDelay: 1000,\n      reconnectionDelayMax: 5000,\n    });\n\n    // Connection event handlers\n    newSocket.on('connect', () => {\n      console.log('WebSocket connected');\n      setIsConnected(true);\n      setError(null);\n      reconnectAttempts.current = 0;\n    });\n\n    newSocket.on('disconnect', (reason) => {\n      console.log('WebSocket disconnected:', reason);\n      setIsConnected(false);\n      \n      if (reason === 'io server disconnect') {\n        // Server disconnected, try to reconnect\n        setError('Server disconnected. Attempting to reconnect...');\n      }\n    });\n\n    newSocket.on('connect_error', (err) => {\n      console.error('WebSocket connection error:', err);\n      setError(`Connection error: ${err.message}`);\n      reconnectAttempts.current++;\n      \n      if (reconnectAttempts.current >= maxReconnectAttempts) {\n        setError('Failed to connect to server. Please refresh the page.');\n      }\n    });\n\n    newSocket.on('reconnect', (attemptNumber) => {\n      console.log('WebSocket reconnected after', attemptNumber, 'attempts');\n      setIsConnected(true);\n      setError(null);\n      reconnectAttempts.current = 0;\n    });\n\n    newSocket.on('reconnect_attempt', (attemptNumber) => {\n      console.log('WebSocket reconnection attempt:', attemptNumber);\n      setError(`Reconnecting... (${attemptNumber}/${maxReconnectAttempts})`);\n    });\n\n    newSocket.on('reconnect_failed', () => {\n      console.error('WebSocket reconnection failed');\n      setError('Failed to reconnect to server. Please refresh the page.');\n    });\n\n    setSocket(newSocket);\n\n    // Cleanup on unmount\n    return () => {\n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n      }\n      newSocket.close();\n    };\n  }, []);\n\n  return {\n    socket,\n    isConnected,\n    error\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}